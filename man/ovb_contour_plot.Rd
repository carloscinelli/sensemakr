% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{ovb_contour_plot}
\alias{ovb_contour_plot}
\alias{ovb_contour_plot.numeric}
\alias{ovb_contour_plot.lm}
\alias{ovb_contour_plot.formula}
\alias{ovb_contour_plot.sensemakr}
\title{Contour plot}
\usage{
ovb_contour_plot(...)

\method{ovb_contour_plot}{numeric}(estimate, se, dof, reduce = TRUE,
  estimate.threshold = 0, r2dz.x = NULL, r2yz.dx = NULL,
  bound_label = NULL, plot_t = FALSE, t.threshold = 2, lim = c(0, 0.4,
  0.001), nlevels = 20, col.contour = "grey40", col.thr.line = "red",
  label.text = TRUE, label.bump = 0.02, ...)

\method{ovb_contour_plot}{lm}(model, treatment, benchmark_covariates = NULL,
  kd = 1, ky = kd, reduce = TRUE, estimate.threshold = 0,
  r2dz.x = NULL, r2yz.dx = NULL, bound_label = NULL, plot_t = FALSE,
  t.threshold = 2, lim = c(0, 0.4, 0.001), nlevels = 20,
  col.contour = "grey40", col.thr.line = "red", label.text = TRUE,
  label.bump = 0.02, ...)

\method{ovb_contour_plot}{formula}(formula, data, treatment,
  benchmark_covariates = NULL, kd = 1, ky = kd, reduce = TRUE,
  estimate.threshold = 0, plot_t = FALSE, t.threshold = 2, lim = c(0,
  0.4, 0.001), nlevels = 20, col.contour = "grey40", col.thr.line = "red",
  label.text = TRUE, ...)

\method{ovb_contour_plot}{sensemakr}(x, ..., lim = c(0, 0.4, 0.001),
  nlevels = 20, plot_t = FALSE, col.contour = "grey40",
  col.line = "red", multipliers_y = c(1, 2, 3),
  multipliers_d = multipliers_y)
}
\arguments{
\item{...}{Arguments which will pass through to the methods invoked.}

\item{estimate}{An estimated effect magnitude}

\item{se}{The standard error of the estimated effect magnitude}

\item{dof}{The residual degrees of freedom of the regression producing the
effect estimate}

\item{r2dz.x}{Partial R^2 with respect to the treatment}

\item{r2yz.dx}{Partial R^2 with respect to the outcome variable}

\item{plot_t}{Logical, default FALSE describing whether to plot the
t-statistic (TRUE) or effect estimate (FALSE).}

\item{lim}{A numeric vector of length 3 containing the beginning, end, and
increment of a sequence, forms the axes of the bound plot}

\item{nlevels}{How many contour lines to produce}

\item{col.contour}{A color parameter for contour plot lines}

\item{x}{A `sensemakr`  object to produce a contour plot from.}

\item{col.line}{A color parameter for the threshold / critical value line}

\item{multipliers_y}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the outcome}

\item{multipliers_d}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the treatment}

\item{...}{Additional plotting graphical parameters}

\item{effect_model}{An lm object describing the relationship Y ~ D + X.
If provided, `estimate`, `se`, and `dof` will be extracted from this.}

\item{treatment_model}{An lm object describing the relationship D ~ X.
If provided, the benchmark confounder will be extracted from this.}

\item{treatment_covariate}{The quoted character name of a variable in the `lm`
object `effect_model`, describing the treatment variable}

\item{benchmark_covariate}{The quoted character name of a variable in the
`lm` objects, describing the benchmark confounder}

\item{...}{Additional plotting graphical parameters}

\item{lim}{A numeric vector of length 3 containing the beginning, end, and
increment of a sequence, forms the axes of the bound plot}

\item{nlevels}{How many contour lines to produce}

\item{plot_t}{Logical, default FALSE describing whether to plot the
t-statistic (TRUE) or effect estimate (FALSE).}

\item{col.contour}{A color parameter for contour plot lines}

\item{col.line}{A color parameter for the threshold / critical value line}

\item{multipliers_y}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the outcome. Only usable with `sensemakr` objects that
contain benchmark variables.}

\item{multipliers_d}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the treatment. Only usable with `sensemakr` objects that
contain benchmark variables.}
}
\description{
`contour_plot` is a generic function to produce sensitivity analysis
contour plots. The function invokes particular methods which depend on
the class of the first argument. For documentation on using  `contour_plot`
with `sensemakr` objects, check \link{contour_plot.sensemakr}. For
documentation on using `contour_plot` with direct numeric arguments, check
\link{contour_plot.default}

Produces a sensitivity analysis contour plot. `contour_plot` can be called by
providing either a series of numerical parameters (`estimate`, `se`, `dof`,
and optionally `r2dz.x` and `r2yz.dx`) or by providing references to models
(`effect_model`, `treatment_covariate`, and optionally `treatment_model`
and `benchmark_covariate`). The produced plot maps how observed effects
could attenuate in the presence of an unobserved confounder that is
correlated with treatment and outcome. See also \link{contour_plot.sensemakr}
to easily produce a contour plot from a `sensemakr` object.

Produces a sensitivity analysis contour plot. The produced plot maps how
observed effects could attenuate in the presence of an unobserved confounder
that is correlated with treatment and outcome.
}
\details{
By default, the `r2dz.x` and `r2yz.dx` (or the same quantities derived from
`benchmark_covariate`) will be used to construct hypothetical unobserved
confounders. The original effect size will be attenuated by the unobserved
confounder: the magnitude of the attenuation will depend on the degree of
confounding. The parameters `multipliers_y` and `multipliers_d` specify how
many times as "strong" the unobserved confounder should be compared to the
reference point. The default is c(1, 2, 3), implying that unobserved
confounders 1, 2, and 3 times as strong as the reference confounder will be
plotted.

By default, this plot will compare the unadjusted effect size estimate to
attenuated versions of the estimate under the presence of unobserved
confounding, using the benchmark variables specified in the `sensemakr`
object. The default comparison plots the effect under the presence of an
unobserved confounder at 1x, 2x, and 3x the "strength" of the benchmark
confounder. Users can override the benchmark confounders by specifying a
`benchmark_covariate` argument (a vector of character strings naming the
benchmarks to plot), and the multipliers by specifying `multipliers_y` and,
optionally, `mulitpliers_d`.
}
\examples{
# Simply plotting a contour plot with no confounders
contour_plot(estimate = 1.8, se = 0.4, dof = 200)

# Adding a confounder that has a partial R^2 of 0.1 with both treatment and
# outcome
contour_plot(estimate = 1.8, se = 0.4, dof = 200, r2dz.x = 0.1, r2yz.dx = 0.1)

# Plotting the t-statistic instead of the effect point estimate
contour_plot(estimate = 1.8, se = 0.4, dof = 200,
             r2dz.x = 0.1, r2yz.dx = 0.1, plot_t = TRUE)

# Changing graphical parameters
contour_plot(estimate = 1.8, se = 0.4, dof = 200,
             r2dz.x = 0.1, r2yz.dx = 0.1, col.line = "blue",
             col.contour = "black", nlevels = 10,
             main = "Contour Plot Example")

# Producing a contour plot using `lm` objects: note that users may find it
# easier to create a `sensemakr` object and use the `contour_plot` method on
# that object
data(darfur)
model.outcome = lm(peacefactor ~ directlyharmed + female + age + village,
                   data = darfur)
model.treat = lm(directlyharmed ~ female + age + village,
                 data = darfur)
contour_plot(effect_model = model.outcome,
             treatment_covariate = "directlyharmed",
             treatment_model = model.treat,
             benchmark_covariate = "female")

# Creating a sensemakr object using the built-in `darfur` data
data(darfur)
sense.out = sensemakr(formula = peacefactor ~ directlyharmed + female +
                        village + age,
                      data = darfur,
                      treatment = "directlyharmed",
                      benchmark = "female")

# Basic contour plot
contour_plot(sense.out)

# Contour plot of t-values and critical threshold
contour_plot(sense.out, plot_t = TRUE)

# Overriding multipliers
contour_plot(sense.out, multipliers_y = c(1, 1.5))

# Overriding colors
contour_plot(sense.out, col.contour = "black", col.line = "blue")

# Adding graphical parameters
contour_plot(sense.out, main = "Custom Title Plot")

# Plotting only some of the benchmarks
sense.out = add_benchmark(sense.out, "age")
contour_plot(sense.out, benchmark_covariate = "female")


}
