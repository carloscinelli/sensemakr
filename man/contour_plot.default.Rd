% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contour_plot.default.R
\name{contour_plot.default}
\alias{contour_plot.default}
\title{Contour plot}
\usage{
\method{contour_plot}{default}(estimate = NULL, se = NULL, dof = NULL,
  r2d = NULL, r2y = NULL, lim = c(0, 0.4, 0.001), nlevels = 20,
  plot_t = FALSE, col.contour = "grey40", col.line = "red",
  multipliers_y = c(1, 2, 3), multipliers_d = multipliers_y, ...,
  effect_model = NULL, treatment_model = NULL, treatment_covariate = NULL,
  benchmark_covariate = NULL)
}
\arguments{
\item{estimate}{An estimated effect magnitude}

\item{se}{The standard error of the estimated effect magnitude}

\item{dof}{The residual degrees of freedom of the regression producing the
effect estimate}

\item{r2d}{Partial R^2 with respect to the treatment}

\item{r2y}{Partial R^2 with respect to the outcome variable}

\item{lim}{A numeric vector of length 3 containing the beginning, end, and
increment of a sequence, forms the axes of the bound plot}

\item{nlevels}{How many contour lines to produce}

\item{plot_t}{Logical, default FALSE describing whether to plot the
t-statistic (TRUE) or effect estimate (FALSE).}

\item{col.contour}{A color parameter for contour plot lines}

\item{col.line}{A color parameter for the threshold / critical value line}

\item{multipliers_y}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the outcome}

\item{multipliers_d}{A vector of multipliers, k, describing how many times
as strong the hypothetical confounders are than the benchmark confounder
with respect to the treatment}

\item{...}{Additional plotting graphical parameters}

\item{effect_model}{An lm object describing the relationship Y ~ D + X.
If provided, `estimate`, `se`, and `dof` will be extracted from this.}

\item{treatment_model}{An lm object describing the relationship D ~ X.
If provided, the benchmark confounder will be extracted from this.}

\item{treatment_covariate}{The quoted character name of a variable in the `lm`
object `effect_model`, describing the treatment variable}

\item{benchmark_covariate}{The quoted character name of a variable in the
`lm` objects, describing the benchmark confounder}
}
\description{
Produces a sensitivity analysis contour plot. `contour_plot` can be called by
providing either a series of numerical parameters (`estimate`, `se`, `dof`,
and optionally `r2d` and `r2y`) or by providing references to models
(`effect_model`, `treatment_covariate`, and optionally `treatment_model`
and `benchmark_covariate`). The produced plot maps how observed effects
could attenuate in the presence of an unobserved confounder that is
correlated with treatment and outcome. See also \link{contour_plot.sensemakr}
to easily produce a contour plot from a `sensemakr` object.
}
\details{
By default, the `r2d` and `r2y` (or the same quantities derived from
`benchmark_covariate`) will be used to construct hypothetical unobserved
confounders. The original effect size will be attenuated by the unobserved
confounder: the magnitude of the attenuation will depend on the degree of
confounding. The parameters `multipliers_y` and `multipliers_d` specify how
many times as "strong" the unobserved confounder should be compared to the
reference point. The default is c(1, 2, 3), implying that unobserved
confounders 1, 2, and 3 times as strong as the reference confounder will be
plotted.
}
\examples{
# Simply plotting a contour plot with no confounders
contour_plot(estimate = 1.8, se = 0.4, dof = 200)

# Adding a confounder that has a partial R^2 of 0.1 with both treatment and
# outcome
contour_plot(estimate = 1.8, se = 0.4, dof = 200, r2d = 0.1, r2y = 0.1)

# Plotting the t-statistic instead of the effect point estimate
contour_plot(estimate = 1.8, se = 0.4, dof = 200,
             r2d = 0.1, r2y = 0.1, plot_t = TRUE)

# Changing graphical parameters
contour_plot(estimate = 1.8, se = 0.4, dof = 200,
             r2d = 0.1, r2y = 0.1, col.line = "blue",
             col.contour = "black", nlevels = 10,
             main = "Contour Plot Example")

# Producing a contour plot using `lm` objects: note that users may find it
# easier to create a `sensemakr` object and use the `contour_plot` method on
# that object
data(darfur)
model.outcome = lm(peacefactor ~ directlyharmed + female + age + village,
                   data = darfur)
model.treat = lm(directlyharmed ~ female + age + village,
                 data = darfur)
contour_plot(effect_model = model.outcome,
             treatment_covariate = "directlyharmed",
             treatment_model = model.treat,
             benchmark_covariate = "female")

}
